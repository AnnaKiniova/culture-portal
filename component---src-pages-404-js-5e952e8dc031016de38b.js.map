{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/languageSwitcher.js","webpack:///./src/components/header.js","webpack:///./src/components/layer.js"],"names":["SEO","_ref","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","react_default","a","createElement","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NotFoundPage","components_layer","seo","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","LanguageSwitcher","select_default","defaultValue","className","onChange","e","console","log","Option","value","Header","props","_this","_Component","call","this","selectDefaultPath","selectedKeyPath","state","path","render","layout_default","row_default","col_default","span","languageSwitcher","menu_default","theme","mode","defaultSelectedKeys","Item","key","gatsby_browser_entry","to","Component","Layer","children","components_header"],"mappings":"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","file":"component---src-pages-404-js-5e952e8dc031016de38b.js","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\n\r\nimport Layer from \"../components/layer\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layer>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layer>\r\n)\r\n\r\nexport default NotFoundPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nconst LanguageSwitcher = () => (\r\n  <Select\r\n    defaultValue=\"ru\"\r\n    className='change-language'\r\n    onChange={(e)=>{console.log(e)}}>\r\n    <Select.Option value=\"en\">en</Select.Option>\r\n    <Select.Option value=\"ru\">ru</Select.Option>\r\n    <Select.Option value=\"by\">by</Select.Option>\r\n  </Select>\r\n);\r\n\r\nexport default LanguageSwitcher;\r\n","import { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Layout, Menu, Col, Row } from 'antd';\r\n\r\nimport LanguageSwitcher from './languageSwitcher';\r\nimport '../styles/header.css';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedKeyPath: props.path,\r\n    };\r\n  }\r\n\r\n  selectDefaultPath = () => {\r\n    const { selectedKeyPath } = this.state;\r\n    if (selectedKeyPath === '/' || selectedKeyPath === '/writers') {\r\n      return selectedKeyPath;\r\n    } else return '/';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout className='layout'>\r\n          <Layout.Header>\r\n            <Row>\r\n              <Col span={4}>\r\n                <LanguageSwitcher/>\r\n              </Col>\r\n              <Col span={20}>\r\n                <Menu\r\n                  theme='dark'\r\n                  mode='horizontal'\r\n                  defaultSelectedKeys={[this.selectDefaultPath()]}\r\n                  className='navigation'\r\n                >\r\n                  <Menu.Item key='/'><Link to='/'>На Главную</Link></Menu.Item>\r\n                  <Menu.Item key='/writers'><Link to='/writers'>Писатели</Link></Menu.Item>\r\n                </Menu>\r\n              </Col>\r\n            </Row>\r\n          </Layout.Header>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  path: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './header';\r\n// import { Layout } from 'antd';\r\n\r\nimport '../styles/layout.css';\r\nimport '../styles/developers.css';\r\n\r\nconst Layer = ({ children, path }) => {\r\n  // const { Footer } = Layout;\r\n  return (\r\n  <div>\r\n    <Header path={path} />\r\n    <main>{children}</main>\r\n    {/* <Footer/> */}\r\n  </div>\r\n  )\r\n};\r\n\r\nLayer.propTypes = {\r\n  children: PropTypes.node,\r\n  path: PropTypes.string,\r\n};\r\n\r\nexport default Layer;\r\n"],"sourceRoot":""}